name: Docker Image CI

on:
  push:
    branches: [ "main" ]

env:
  AQUA_USER: ${{ secrets.AQUA_USER }} # Aqua Registry
  AQUA_PASSWORD: ${{ secrets.AQUA_PASSWORD }} # Aqua Registry
  AQUA_TOKEN: ${{ secrets.AQUA_TOKEN }} # Aqua Scanner authentication
  AQUA_HOST: ${{ secrets.AQUA_HOST }} # Aqua Scanner authentication
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }} # Docker Registry
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }} # Docker Registry
  BUILD_NUMBER: ${{ github.run_id }}
  BUILD_NAME: ${{ github.repository }}
  GITHUB_WORKSPACE: ${{ github.workspace }}
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  IMAGE_NAME: stanhoe/spring4shell:codetocloud
  
jobs:
  aqua:
    name: Aqua Supply Chain Security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Setup Aqua Pipeline Enforcer
        uses: aquasecurity/pipeline-enforcer-action@v1.0.0
        env:
          CSPM_URL: https://asia-1.api.cloudsploit.com
          AQUA_URL: https://api.asia-1.supply-chain.cloud.aquasec.com
        with:
          aqua-key: ${{ secrets.AQUA_KEY }}
          aqua-secret: ${{ secrets.AQUA_SECRET }}

      - name: Run Aqua Scanner
        uses: docker://aquasec/aqua-scanner
        with:
          args: trivy fs --format sarif --output trivy-results.sarif --security-checks config,vuln,secret --debug --sast --reachability . 
          # To customize which severities to scan for, add the following flag: --severity UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
          # To enable SAST scanning, add: --sast
          # To enable npm/dotnet non-lock file scanning, add: --package-json / --dotnet-proj
        env:
          AQUA_KEY: ${{ secrets.AQUA_KEY }}
          AQUA_SECRET: ${{ secrets.AQUA_SECRET }}
          AQUA_URL: https://api.asia-1.supply-chain.cloud.aquasec.com
          CSPM_URL: https://asia-1.api.cloudsploit.com
          TRIVY_RUN_AS_PLUGIN: 'aqua'
          
#       - name: Upload Trivy scan results to GitHub Security tab
#         uses: github/codeql-action/upload-sarif@v2
#         with:
#           sarif_file: trivy-results.sarif
          
#       - name: Aqua Release Artifact 
#         run: |
#           export BILLY_SERVER=https://billy.asia-1.codesec.aquasec.com
#           curl -sLo install.sh download.codesec.aquasec.com/billy/install.sh
#           curl -sLo install.sh.checksum https://github.com/argonsecurity/releases/releases/latest/download/install.sh.checksum
#           if ! cat install.sh.checksum | sha256sum ; then
#           echo "install.sh checksum failed"
#           exit 1
#           fi
#           BINDIR="." sh install.sh
#           rm install.sh install.sh.checksum
#           ./billy generate \
#             --access-token "${{ secrets.GH_TOKEN }}" \
#             --aqua-key "${{ secrets.AQUA_KEY }}" \
#             --aqua-secret "${{ secrets.AQUA_SECRET }}" \
#             --cspm-url https://asia-1.api.cloudsploit.com \
#             --artifact-path $GITHUB_WORKSPACE
            
  build:
    name: Build, Scan, and Push Docker image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag $IMAGE_NAME
    - name: Aqua Image Scanner
      run: |
        docker image ls 
        docker login registry.aquasec.com -u $AQUA_USER -p $AQUA_PASSWORD
        docker pull registry.aquasec.com/scanner:2301.4.6
        docker run --rm -v $GITHUB_WORKSPACE:/tmp -v /var/run/docker.sock:/var/run/docker.sock -e BUILD_NUMBER=$BUILD_NUMBER -e BUILD_JOB_NAME=$BUILD_NAME registry.aquasec.com/scanner:2022.4 scan -w /tmp --host $AQUA_HOST --token $AQUA_TOKEN --show-negligible --local $IMAGE_NAME --htmlfile /tmp/out.html --jsonfile /tmp/out.json > /dev/null
    - name: Push Docker image to Docker Hub
      run: |
        docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        docker push $IMAGE_NAME 

    - name: Aqua Release Artifact (SBOM)
      run: |
          export BILLY_SERVER=https://billy.asia-1.codesec.aquasec.com
          curl -sLo install.sh download.codesec.aquasec.com/billy/install.sh
          curl -sLo install.sh.checksum https://github.com/argonsecurity/releases/releases/latest/download/install.sh.checksum
          if ! cat install.sh.checksum | sha256sum ; then
          echo "install.sh checksum failed"
          exit 1
          fi
          BINDIR="." sh install.sh
          rm install.sh install.sh.checksum
          ./billy generate \
            --access-token "${{ secrets.GH_TOKEN }}" \
            --aqua-key "${{ secrets.AQUA_KEY }}" \
            --aqua-secret "${{ secrets.AQUA_SECRET }}" \
            --cspm-url https://asia-1.api.cloudsploit.com \
            --artifact-path $IMAGE_NAME
        
    - uses: actions/upload-artifact@v3
      with:
        name: aqua-artifact
        path: out.*
